% Define facts and rules
factorial(0, 1).
factorial(N, F) :- N > 0, N1 is N - 1, factorial(N1, F1), F is N * F1.

% Define forward chaining rule
% If there is a fact for factorial(N, F), then there is also a fact for factorial(N+1, F*(N+1))
forward_chain :-
    factorial(N, F),
    N1 is N + 1,
    \+ factorial(N1, _), % Check if factorial(N+1, _) is not already a fact
    F1 is F * N1,
    assert(factorial(N1, F1)),
    write('Derived: factorial('), write(N1), write(', '), write(F1), writeln(')'),
    fail. % Force backtracking to find more derivations

% Query to start forward chaining
% This will derive new factorial facts until no more can be derived
% Use Ctrl+C to stop the derivation process
:- forward_chain.
